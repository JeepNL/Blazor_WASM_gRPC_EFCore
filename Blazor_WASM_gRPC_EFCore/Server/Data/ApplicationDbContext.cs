using Blazor_WASM_gRPC_EFCore.Shared.Protos;
using Microsoft.EntityFrameworkCore;

namespace Blazor_WASM_gRPC_EFCore.Server.Data
{
	public class ApplicationDbContext : DbContext
	{
		///
		/// In VS Package Manager Console (Select Default Server Project)
		///
		/// FIRST: Init (delete DB first)
		/// Clear; Add-Migration InitialCreate -OutputDir "Data/Migrations"; Update-Database;
		///
		/// 1) Add migration:
		/// Clear; Add-Migration <Migration_Name> -OutputDir "Data/Migrations"
		///
		/// 1A) If necessary:
		/// Remove-Migration
		///
		/// 2) Then
		/// Update-Database
		///

		public ApplicationDbContext(DbContextOptions options) : base(options)
		{
		}

		public DbSet<Post>? Posts { get; set; }
		public DbSet<Tag>? Tags { get; set; }

		public override int SaveChanges()
		{
			return base.SaveChanges();
		}

		protected override void OnConfiguring(DbContextOptionsBuilder optionsBuilder) => optionsBuilder
				.LogTo(Console.WriteLine, LogLevel.Information) // LogLevel.Warning for production
				.EnableSensitiveDataLogging(); // for debugging only

		protected override void OnModelCreating(ModelBuilder modelBuilder)
		{
			base.OnModelCreating(modelBuilder);

			modelBuilder
				.Entity<Post>()
				.HasMany(e => e.TagsInPostRepeated)
				.WithMany(e => e.PostsInTagRepeated)
				.UsingEntity<Dictionary<string, object>>(
					// (Join) Table Name. Renames EF Core autogenerated 'PostTag' table to 'PostsTags' table
					"PostsTags",
					p => p
						.HasOne<Tag>()
						.WithMany()
						.HasForeignKey("TagId")
					//.HasConstraintName("FK_PostsTags_Tags_TagId")
					//.OnDelete(DeleteBehavior.Cascade)
					, t => t // watch the comma :)
						.HasOne<Post>()
						.WithMany()
						.HasForeignKey("PostId")
				//.HasConstraintName("FK_PostsTags_Posts_PostId")
				//.OnDelete(DeleteBehavior.Cascade)
				);

			// NOTE: Not needed anymore.
			// Adding data to Many to Many Join Table 'PostsTags' now works because of just the 2 lines below.
			// See: https://github.com/dotnet/efcore/issues/23703#issuecomment-758801618
			//modelBuilder.Entity<Post>().Navigation(e => e.TagsInPostRepeated).HasField("tagsInPostRepeated_");
			//modelBuilder.Entity<Tag>().Navigation(e => e.PostsInTagRepeated).HasField("postsInTagRepeated_");
		}
	}
}
